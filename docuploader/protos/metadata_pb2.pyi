# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import Message as google___protobuf___message___Message

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from typing import Optional as typing___Optional, Text as typing___Text

from typing_extensions import Literal as typing_extensions___Literal

class Metadata(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    version = ...  # type: typing___Text
    language = ...  # type: typing___Text
    distribution_name = ...  # type: typing___Text
    product_page = ...  # type: typing___Text
    github_repository = ...  # type: typing___Text
    issue_tracker = ...  # type: typing___Text
    @property
    def update_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    def __init__(
        self,
        update_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        name: typing___Optional[typing___Text] = None,
        version: typing___Optional[typing___Text] = None,
        language: typing___Optional[typing___Text] = None,
        distribution_name: typing___Optional[typing___Text] = None,
        product_page: typing___Optional[typing___Text] = None,
        github_repository: typing___Optional[typing___Text] = None,
        issue_tracker: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Metadata: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal[u"update_time"]
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                u"distribution_name",
                u"github_repository",
                u"issue_tracker",
                u"language",
                u"name",
                u"product_page",
                u"update_time",
                u"version",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[u"update_time", b"update_time"],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"distribution_name",
                b"github_repository",
                b"issue_tracker",
                b"language",
                b"name",
                b"product_page",
                b"update_time",
                b"version",
            ],
        ) -> None: ...
